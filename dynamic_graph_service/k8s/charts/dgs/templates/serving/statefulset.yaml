{{- range $i, $e := until (.Values.serving.workerNum | int) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dgs.serving.name" $ }}-{{ $i }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "dgs.labels" $ | nindent 4 }}
    {{- if $.Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: serving
    {{ include "dgs.label.group" $ }}/worker: serving-{{ $i }}
  {{- if $.Values.commonAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      {{- include "dgs.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: serving
      {{ include "dgs.label.group" $ }}/worker: serving-{{ $i }}
  serviceName: {{ include "dgs.serving.name" $ }}-headless-{{ $i }}
  updateStrategy:
    {{- include "common.tplvalues.render" (dict "value" $.Values.serving.updateStrategy "context" $ ) | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "dgs.labels" $ | nindent 8 }}
        app.kubernetes.io/component: serving
        {{ include "dgs.label.group" $ }}/worker: serving-{{ $i }}
        {{- if $.Values.serving.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.serving.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if $.Values.serving.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" $.Values.serving.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      affinity:
      {{- if $.Values.serving.affinity }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.serving.affinity "context" $) | nindent 8 }}
      {{- else }}
        podAffinity:
          {{- include "common.affinities.pods" (dict "type" $.Values.serving.podAffinityPreset "component" "serving" "context" $) | nindent 10 }}
        podAntiAffinity:
          {{- include "common.affinities.pods" (dict "type" $.Values.serving.podAntiAffinityPreset "component" "serving" "context" $) | nindent 10 }}
        nodeAffinity:
          {{- include "common.affinities.nodes" (dict "type" $.Values.serving.nodeAffinityPreset.type "key" $.Values.serving.nodeAffinityPreset.key "values" $.Values.serving.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if $.Values.serving.nodeSelector }}
      nodeSelector:
        {{- include "common.tplvalues.render" (dict "value" $.Values.serving.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if $.Values.serving.tolerations }}
      tolerations:
        {{- include "common.tplvalues.render" (dict "value" $.Values.serving.tolerations "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dgs.serviceAccountName" $ }}
      {{- include "dgs.images.pullSecrets" (dict "imageRoot" $.Values.image) | nindent 6 }}
      initContainers:
        - name: serving-{{ $i }}-init
          image: {{ include "dgs.images.image" (dict "imageRoot" $.Values.image) }}
          imagePullPolicy: {{ $.Values.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -c
            - |
              mkdir -p {{ $.Values.serving.persistence.mountPath }}/sample_store

              mkdir -p {{ $.Values.serving.workdir }}/package
              wget {{ $.Values.packageRepoURL }}/{{ $.Values.packageName }} -q -P /tmp
              tar zxvf /tmp/{{ $.Values.packageName }} -C {{ $.Values.serving.workdir }}/package --strip-components 1
              rm -f /tmp/{{ $.Values.packageName }}
          volumeMounts:
            - name: ephemeral
              mountPath: {{ $.Values.serving.workdir }}
            - name: checkpoint-data
              mountPath: {{ $.Values.serving.persistence.mountPath }}
      containers:
        - name: serving-{{ $i }}
          image: {{ include "dgs.images.image" (dict "imageRoot" $.Values.image) }}
          imagePullPolicy: {{ $.Values.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -c
            - |
              cd {{ $.Values.serving.workdir }}/package/bin
              if [ -f "TERMINATE_FLAG" ]; then rm -f TERMINATE_FLAG; fi

              mkdir -p {{ $.Values.serving.workdir }}/sample_store
              rm -rf {{ $.Values.serving.workdir }}/sample_store/*

              cd {{ $.Values.serving.workdir }}/package/bin
              ./service_main {{ include "dgs.glog.option" $ }} \
                --config-file {{ $.Values.configPath }}/serving.cnf \
                --worker-id {{ $i }}
          ports:
            - name: http-port
              containerPort: 10000
          {{- if $.Values.serving.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  ProcNumber=$(ps -ef | grep "service_main" | grep -v grep | wc -l)
                  if [ $ProcNumber -le 0 ] || [ -f "{{ $.Values.serving.workdir }}/package/bin/TERMINATE_FLAG" ]; then exit 1; else exit 0; fi
            {{- include "common.tplvalues.render" (dict "value" (omit $.Values.serving.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if $.Values.serving.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: http-port
            {{- include "common.tplvalues.render" (dict "value" (omit $.Values.serving.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if $.Values.serving.resources }}
          resources:
            {{- toYaml $.Values.serving.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: {{ $.Values.configPath }}
            - name: ephemeral
              mountPath: {{ $.Values.serving.workdir }}
            - name: checkpoint-data
              mountPath: {{ $.Values.serving.persistence.mountPath }}
      volumes:
        - name: config
          configMap:
            name: {{ include "dgs.configmap.name" $ }}
            items:
              - key: schema.json
                path: schema.json
              - key: serving.cnf
                path: serving.cnf
        - name: ephemeral
          emptyDir: {}
        {{- if not $.Values.serving.persistence.enabled }}
        - name: checkpoint-data
          emptyDir: {}
        {{- else if $.Values.serving.persistence.existingClaim }}
        - name: checkpoint-data
          persistentVolumeClaim:
            claimName: {{ tpl $.Values.serving.persistence.existingClaim . }}
        {{- end }}
  {{- if and $.Values.serving.persistence.enabled (not $.Values.serving.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: checkpoint-data
        {{- if $.Values.serving.persistence.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" $.Values.serving.persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range $.Values.serving.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ $.Values.serving.persistence.size | quote }}
        {{- include "dgs.storage.class" $.Values.serving.persistence | nindent 8 }}
        {{- if $.Values.serving.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" $.Values.serving.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
  {{- end }}
{{- end }}