apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "dgs.frontend.name" . }}-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dgs.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: ingress
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/limit-connections: {{ .Values.frontend.limitConnections | quote }}
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($request_uri ~ ^/infer\?qid=[\d]+&vid=[\d]+$) {
        set_by_lua_block $workerId {
          return tonumber(ngx.req.get_uri_args()["vid"]) % {{ .Values.serving.workerNum }}
        }
        rewrite ^/infer(.*)$ /serving/w$workerId$1 break;
      }
spec:
  rules:
    - host: {{ .Values.frontend.ingressHostName }}
      http:
        paths:
          {{- range $i, $e := until (.Values.serving.workerNum | int) }}
          - path: /serving/w{{ $i }}
            pathType: Exact
            backend:
              service:
                name: {{ include "dgs.serving.name" $ }}-nodeport-{{ $i }}
                port:
                  number: {{ $.Values.serving.httpService.port }}
          {{- end }}
          - path: /admin
            pathType: Prefix
            backend:
              service:
                name: {{ include "dgs.coordinator.name" . }}-nodeport
                port:
                  number: {{ .Values.coordinator.httpService.port }}
